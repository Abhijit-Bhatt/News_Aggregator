{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/feed/feed.component.ts","./src/app/feed/feed.component.html","./src/app/options/options.component.ts","./src/app/options/options.component.html","./src/app/options/infobox.html","./src/app/services/GetDataService.ts","./src/app/settings/settings.component.ts","./src/app/settings/settings.component.html","./src/app/welcome/welcome.component.ts","./src/app/welcome/welcome.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { OptionsComponent } from './options/options.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { FeedComponent } from './feed/feed.component';\nimport { SettingsComponent } from './settings/settings.component';\n\n\nconst routes: Routes = [\n  {\n    path:'welcome',\n    component: WelcomeComponent\n  },\n  {path:'options',\n  component: OptionsComponent\n  },\n  {\n    path: 'feed',\n    component: FeedComponent\n  },\n  {\n    path: 'settings',\n    component: SettingsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {}\n","<nav>\n    <div id=\"nav-tabs\"> \n        <p id=\"welcome\"> <a routerLink=\"/welcome\" routeLinkActive=\"active\">Welcome</a></p>\n        <p> <a routerLink=\"/options\" routeLinkActive=\"active\">Explore</a></p>\n        <p> <a routerLink=\"/feed\" routeLinkActive=\"active\">My Feed</a></p>\n        <p> <a routerLink=\"/settings\" routeLinkActive=\"active\">Settings</a></p>\n    </div>\n    <mat-divider></mat-divider>\n</nav>\n\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AppComponent } from './app.component';\nimport { OptionsComponent } from './options/options.component';\nimport { FeedComponent } from './feed/feed.component';\nimport { WelcomeComponent } from './welcome/welcome.component'\nimport { SettingsComponent } from './settings/settings.component';\nimport {Infobox} from './options/options.component';\n\nimport { FormsModule } from '@angular/forms';\nimport {ReactiveFormsModule} from '@angular/forms';\n\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatDialogModule} from '@angular/material/dialog';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    OptionsComponent,\n    FeedComponent,\n    WelcomeComponent,\n    SettingsComponent,\n    Infobox\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    FormsModule,\n    HttpClientModule,\n    MatCardModule,\n    MatExpansionModule,\n    MatIconModule,\n    MatDividerModule,\n    MatSidenavModule,\n    MatSelectModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    MatDialogModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-feed',\n  templateUrl: './feed.component.html',\n  styleUrls: ['./feed.component.scss']\n})\nexport class FeedComponent implements OnInit {\n\n\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n"," \n<mat-sidenav-container class=\"container\">\n    <mat-sidenav mode=\"side\" opened>\n        <p>Tab 1 </p>\n        <p>Tab 2</p>\n        <p>Tab 3</p>\n    </mat-sidenav>\n    <mat-sidenav-content>\n       Main Content\n    </mat-sidenav-content>\n</mat-sidenav-container>\n\n","import { Component, OnInit, Injectable} from '@angular/core';\n\nimport { FormControl } from '@angular/forms'\nimport { GetDataService } from '../services/GetDataService'\nimport {MatDialog} from '@angular/material/dialog'\n\ninterface Action {\n  value: string\n  viewValue: string\n}\n\n@Component({\n  selector: 'app-options',\n  templateUrl: './options.component.html',\n  styleUrls: ['./options.component.scss']\n})\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OptionsComponent{\n\n  // Display content \n  load: boolean\n\n  // All parameters to enter\n  searchParameters: string\n  language: string\n\n  selectedSources = new FormControl()\n  sourcesList: string[] = ['cnn', 'fox-news', 'nbc-news']\n\n  actionList: Action[] = [{value:'getTopHeadlines', viewValue:'Get Top Headlines'}, {value:'getEverything', viewValue:'Get Everything'}]\n  selectedAction: string\n\n  // Data that is retreived from backend\n  data: JSON\n\n  constructor(private getData: GetDataService, public dialog: MatDialog) {\n    this.load = false\n   }\n\n  \n  openDialog() {\n    \n    const dialogRef = this.dialog.open(Infobox);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n\n\n  getter(){\n    \n    console.log(`${this.searchParameters} ${this.selectedSources.value} ${this.language} ${this.selectedAction}`)\n\n   this.getData.getData(this.searchParameters, this.selectedSources.value, this.language, this.selectedAction).subscribe({\n      next: (data) => {\n        this.data = data\n        console.log(this.data)\n      },\n      error: err => {\n        console.log(\"Not Working!\")\n        console.log(err) \n      }\n    })\n\n    this.load = true\n  } \n}\n\n@Component({\n  selector: 'info-box',\n  templateUrl: 'infobox.html'\n})\nexport class Infobox{}\n","<mat-expansion-panel class=\"container\" hideToggle>\n  <mat-expansion-panel-header>\n    <mat-panel-title>\n     <mat-icon>search</mat-icon> Enter Parameters \n    </mat-panel-title>\n    <mat-panel-description (click)=\"openDialog()\">\n      Search Guide  \n    </mat-panel-description>\n  </mat-expansion-panel-header>\n  \n  <div class=\"search\">\n    <mat-form-field >\n      <mat-label>Keywords</mat-label>\n      <input matInput type=\"text\" [(ngModel)]=\"searchParameters\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>Sources</mat-label>\n      <mat-select [formControl]=\"selectedSources\" multiple>\n        <mat-option *ngFor=\"let source of sourcesList\" [value]=\"source\">{{source}}</mat-option>\n      </mat-select>\n    </mat-form-field>\n    <mat-form-field>\n      <mat-label> Language </mat-label>\n      <input matInput type=\"text\" [(ngModel)] = \"language\">\n    </mat-form-field>\n    <mat-form-field appearance=\"fill\">\n      <mat-label>What to get?</mat-label>\n      <mat-select [(ngModel)]=\"selectedAction\">\n        <mat-option *ngFor= \"let action of actionList\" [value]=\"action.value\">{{action.viewValue}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  \n    <button mat-raised-button (click)=\"getter()\">Submit</button>\n  </div>\n\n</mat-expansion-panel>\n\n<!-- <mat-accordion class=\"container\">\n  \n</mat-accordion> -->\n\n\n<div *ngIf=\"this.load\" >\n  <div *ngFor=\"let articlesFromSource of this.data | keyvalue\">\n    <mat-card *ngFor=\"let item of articlesFromSource.value\" class=\"card\">\n      <mat-card-title>{{item[\"title\"]}}</mat-card-title>\n      <mat-card-content>\n        <p> Author: {{item[\"author\"]}}</p> \n        <p> Content: {{item[\"content\"]}}</p> \n        <p> Description: {{item[\"description\"]}}</p> \n        <p> Published At: {{item[\"publishedAt\"]}}</p> \n        <p> Source: {{item[\"source\"]}}</p> \n        <p> url: <a href=\"{{item['url']}}\"> {{item[\"url\"]}} </a></p> \n      </mat-card-content>\n    </mat-card>\n\n  </div>\n \n</div>\n\n\n\n","<h1>Information on the Different Parameters</h1>\n\n<h2>Search Parameters:</h2>\n<p>Put a list of keywords. Note: separate each keyword with comma+space. If you put multiple keywords, will display with articles that have all keywords</p>\n\n<br>\n\n<h2>Sources:</h2>\n<p>Select sources that you want to choose from. Currently support only those in dropdown</p>\n\n<br>\n\n<h2>Language:</h2>\n<p>Only selects news sources of that language </p>\n\n<br>\n\n<h2>What to Get:</h2>\n<h3>Get Top Headlines</h3>\n<p>Gets headlining news articles with entered keywords from sources</p>\n<h3>Get Everything</h3>\n<p>Gets all news articles with those key words from the selected news sources </p>","import { Injectable } from '@angular/core'\n\nimport { HttpClient } from '@angular/common/http'\nimport { Observable } from 'rxjs';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class GetDataService{\n\n    flaskUrl: string = 'http://127.0.0.1:5000/display_content/'\n\n    constructor(private httpService: HttpClient){}\n\n    getData(searchFor, sources, language, method): Observable<JSON>  {\n        \n        let urlWithParams: string = this.flaskUrl +  `${searchFor}&${sources}&${language}&${method}`\n        return this.httpService.get<JSON>(urlWithParams)\n    }\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.scss']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>settings works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.scss']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"welcome\">\n    <h1>Welcome to Our News Aggregator Project!</h1>\n    <section>\n        <p> Our News Aggregator site leverages the external API <span> NewsAPI </span> to pull News articles from external sources based off of certain keywords. </p>\n        <p>Our application frontend renders JSON data sent from the application backend.</p>\n        <p>Tech Stack: Frontend - Angular w/ Angular Material (UI Design), Backend - Flask </p>\n    </section>\n\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}